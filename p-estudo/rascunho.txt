/*criar estado da aplicação com objeto

criar var para quadro do jogos
var board = [];
criar var para jogo atual
var currentGame = [1, 5, 11, 13, 15, 17];
criar var para salvar os jogos
var savedGames = [];*/

//boa prátida guardar essas var juntas
//criar objeto para guardar todas
var state = { board: [], currentGame: [], savedGames: [] };

//criar função start
function start() {
  /*criar funções para lidar com a nossa lógica
  1-incluir numero que vai entrar em currentGame
  2-excluir numero que vai sair de currentGame
  3-salvar o jogo se o jogop estiver completo
  4-limpar o jogo
  5-zerar o jogo*/
  /*addNumberToGame(1);
  addNumberToGame(2);
  addNumberToGame(3);
  addNumberToGame(4);
  addNumberToGame(5);
  addNumberToGame(6);*/
  //removeNumberFromGame(6);
  //addNumberToGame(6);
  //saveGame();
  /*console.log(state.currentGame);
  console.log(state.savedGames);
  resetGame();
  console.log(state.currentGame);*/
  readLocalStorage();
  createBoard();
  newGame();

  //console.log(state.board);
}

function readLocalStorage() {
  if (!window.localStorage) {
    return;
  }

  var savedGamesFromLocalStorage = window.localStorage.getItem('saved-games');

  //console.log(savedGamesFromLocalStorage);

  if (savedGamesFromLocalStorage) {
    state.savedGames = JSON.parse(savedGamesFromLocalStorage);
  }
}

function writeToLocalStorage() {
  window.localStorage.setItem('saved-games', JSON.stringify(state.savedGames));
}

/*invocar função start
start();*/

//criar função para adicionar números ao jogo
//regra: numero tem que ser entre 1 e 60.
//nova regra: máximo de 6 número.
//nova regra: não inserir o mesmo numero no jogo, criada function isNumberInGame.
function addNumberToGame(numberToAdd) {
  if (numberToAdd < 1 || numberToAdd > 60) {
    console.error(
      'NÚMERO INVÁLIDO:' + numberToAdd + '. Favor inserir número de 1 á 60.'
    );
    return;
  }

  if (state.currentGame.length >= 6) {
    console.error('O jogo já está completo, MÁXIMO DE 6 NÚMEROS!');
    return;
  }

  if (isNumberInGame(numberToAdd)) {
    console.error('Este número já está no jogo:' + numberToAdd);
    return;
  }

  state.currentGame.push(numberToAdd);
}

//Função para não inserir número repetido ao jogo
function isNumberInGame(numberToCheck) {
  /*if (state.currentGame.includes(numberToCheck)) {
    return true;
  }
  return false;*/
  //forma a cima correta de fazer a função mas há uma forma mais elegante, segue a seguir.
  return state.currentGame.includes(numberToCheck);
}

//Função para remover número do jogo
function removeNumberFromGame(numberToRemove) {
  if (numberToRemove < 1 || numberToRemove > 60) {
    console.error(
      'NÚMERO INVÁLIDO:' + numberToRemove + '. Favor inserir número de 1 á 60.'
    );
    return;
  }

  var newGame = [];

  for (var i = 0; i < state.currentGame.length; i++) {
    var currentNumber = state.currentGame[i];

    if (currentNumber === numberToRemove) {
      //se eu cheguei no numero que eu quero, não faço nada.
      //como fazer nada dentro do for? usa o "continue"
      continue;
    }
    //se eu não cheguei no número? então add ao novo jogo:
    newGame.push(currentNumber);
  }
  state.currentGame = newGame;
}

//Função para verificar se o jogo está completo
function isGameComplete() {
  return state.currentGame.length === 6;
}

//Criar função para salvar o jogo
function saveGame() {
  if (!isGameComplete()) {
    console.error('O jogo não está completo!');
    return;
  }
  state.savedGames.push(state.currentGame);

  console.log(state.savedGames, 'Jogo salvo!');
  writeToLocalStorage();
  newGame();
}

//Função para zerar o jogo
function resetGame() {
  state.currentGame = [];
}

//Montar o board do jogo:
function createBoard() {
  state.board = [];

  for (var i = 1; i <= 60; i++) {
    state.board.push(i);
  }
}

//criar função novo jogo
function newGame() {
  resetGame();
  render();

  console.log(state.currentGame);
}

//criar função render para renderização da página
//para criar os elementos visuais da página
function render() {
  renderBoard();
  renderButtons();
  renderSavedGames();
}

function renderBoard() {
  var divBoard = document.querySelector('#megasena-board');
  //agora zerar por boa prática, para zerar:
  divBoard.innerHTML = '';

  var ulNumbers = document.createElement('ul');
  ulNumbers.classList.add('numbers');

  for (var i = 0; i < state.board.length; i++) {
    var currentNumber = state.board[i];

    var liNumber = document.createElement('li');
    liNumber.textContent = currentNumber;
    liNumber.classList.add('number');

    //adidionando funcionalidade de clique:
    // logo depois criando a função para isso handleNumberClick
    liNumber.addEventListener('click', handleNumberClick);

    if (isNumberInGame(currentNumber)) {
      liNumber.classList.add('selected-number');
    }

    ulNumbers.appendChild(liNumber);
  }
  divBoard.appendChild(ulNumbers);
  //render();
}

//quando adiciona o clique na li, ela retorna uma variavel especial
//damos o nome de event e nele tem varias "coisas"
function handleNumberClick(event) {
  var value = Number(event.currentTarget.textContent);
  //console.log(value);
  //Verificar se o estado do numero clicado no jogo:
  //Para saber se vai adicionar o numero ou remover
  if (isNumberInGame(value)) {
    removeNumberFromGame(value);
  } else {
    addNumberToGame(value);
  }
  console.log(state.currentGame);
  render();
  //-deu erro, verificar oq aconteceu !!!!
}

function renderButtons() {
  var divButtons = document.querySelector('#megasena-buttons');
  divButtons.innerHTML = '';

  var buttonNewGame = createNewGameButton();
  var buttonRandomGame = createRandomGameButton();
  var buttonSaveGame = createSaveGameButton();

  divButtons.appendChild(buttonNewGame);
  divButtons.appendChild(buttonRandomGame);
  divButtons.appendChild(buttonSaveGame);
}

function createRandomGameButton() {
  var button = document.createElement('button');
  button.textContent = 'Jogo aleatório';

  button.addEventListener('click', randomGame);

  return button;
}

function createSaveGameButton() {
  var button = document.createElement('button');
  button.textContent = 'Salvar jogo';
  button.disabled = !isGameComplete();

  button.addEventListener('click', saveGame);

  return button;
}

function createNewGameButton() {
  var button = document.createElement('button');
  button.textContent = 'Novo jogo';

  button.addEventListener('click', newGame);

  return button;
}

function renderSavedGames() {
  var divSavedGames = document.querySelector('#megasena-saved-games');
  divSavedGames.innerHTML = '';

  if (state.savedGames.length === 0) {
    divSavedGames.innerHTML = '<p>Nenhum jogo salvo</p>';
  } else {
    var ulSavedGames = document.createElement('ul');

    for (var i = 0; i < state.savedGames.length; i++) {
      var currentGame = state.savedGames[i];

      //deixar os numero do jogo feito pelo usuario
      //mais "bonito" currentGame.join(", ")
      //se fosse uma string para transformar em array:
      //ex: "Lais".split("") ele cria um array
      //['L', 'a', 'i', 's']
      console.log(currentGame.join(', '));

      var liGame = document.createElement('li');
      liGame.textContent = currentGame.join(', ');

      ulSavedGames.appendChild(liGame);
    }
    divSavedGames.appendChild(ulSavedGames);
  }
}

//Função para gerar um número aleatório
function randomGame() {
  resetGame();

  //Math.random:operação do Java que retorna valores entre 0 e 1.
  //utiliza o ceil para arredondar para cima.

  while (!isGameComplete()) {
    var randomNumber = Math.ceil(Math.random() * 60);
    addNumberToGame(randomNumber);
  }
  console.log(state.currentGame);
  render();
}

start();
